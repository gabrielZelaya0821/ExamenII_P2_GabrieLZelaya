package examenii_p2_gabrielzelaya;

import java.io.File;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import modelos.Deporte;
import modelos.Equipo;
import modelos.Partido;
import modelos.Torneo;
import persistencia.datos.ManejoBinarios;

/**
 *
 * @author gabri
 */
public class ExamenII extends javax.swing.JFrame {

    public ExamenII() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pp_torneos = new javax.swing.JPopupMenu();
        crear_deporte = new javax.swing.JMenuItem();
        pp_deporte = new javax.swing.JPopupMenu();
        crear_torneo = new javax.swing.JMenuItem();
        pp_opcionesTorneo = new javax.swing.JPopupMenu();
        crear_equipo = new javax.swing.JMenuItem();
        mostrar_tabla = new javax.swing.JMenuItem();
        simular_partido = new javax.swing.JMenuItem();
        listar_equipos = new javax.swing.JMenuItem();
        dialog_mostrarTabla = new javax.swing.JDialog();
        bg_tabla = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla_deporte = new javax.swing.JTable();
        dialog_simular = new javax.swing.JDialog();
        bg_simular = new javax.swing.JPanel();
        cb_equipoLocal = new javax.swing.JComboBox<>();
        cb_equipoVisita = new javax.swing.JComboBox<>();
        spinner_local = new javax.swing.JSpinner();
        spinner_visita = new javax.swing.JSpinner();
        btn_registrar = new javax.swing.JButton();
        txt_equipos = new javax.swing.JLabel();
        txt_vs = new javax.swing.JLabel();
        dialog_lista = new javax.swing.JDialog();
        bg_lista = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lista_equipos = new javax.swing.JList<>();
        txt_equipo = new javax.swing.JLabel();
        btn_historial = new javax.swing.JButton();
        bg_examen = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree_torneos = new javax.swing.JTree();
        txt_torneos = new javax.swing.JLabel();
        btn_guardar = new javax.swing.JButton();
        btn_cargar = new javax.swing.JButton();

        crear_deporte.setText("Crear deporte");
        crear_deporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crear_deporteActionPerformed(evt);
            }
        });
        pp_torneos.add(crear_deporte);

        crear_torneo.setText("Agregar torneo");
        crear_torneo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crear_torneoActionPerformed(evt);
            }
        });
        pp_deporte.add(crear_torneo);

        crear_equipo.setText("Crear equipo");
        crear_equipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crear_equipoActionPerformed(evt);
            }
        });
        pp_opcionesTorneo.add(crear_equipo);

        mostrar_tabla.setText("Mostrar tabla");
        mostrar_tabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrar_tablaActionPerformed(evt);
            }
        });
        pp_opcionesTorneo.add(mostrar_tabla);

        simular_partido.setText("Simular Partido");
        simular_partido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simular_partidoActionPerformed(evt);
            }
        });
        pp_opcionesTorneo.add(simular_partido);

        listar_equipos.setText("Listar equipos");
        listar_equipos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listar_equiposActionPerformed(evt);
            }
        });
        pp_opcionesTorneo.add(listar_equipos);

        dialog_mostrarTabla.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        bg_tabla.setBackground(new java.awt.Color(255, 255, 255));

        tabla_deporte.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Puntos"
            }
        ));
        jScrollPane2.setViewportView(tabla_deporte);

        javax.swing.GroupLayout bg_tablaLayout = new javax.swing.GroupLayout(bg_tabla);
        bg_tabla.setLayout(bg_tablaLayout);
        bg_tablaLayout.setHorizontalGroup(
            bg_tablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bg_tablaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                .addContainerGap())
        );
        bg_tablaLayout.setVerticalGroup(
            bg_tablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bg_tablaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout dialog_mostrarTablaLayout = new javax.swing.GroupLayout(dialog_mostrarTabla.getContentPane());
        dialog_mostrarTabla.getContentPane().setLayout(dialog_mostrarTablaLayout);
        dialog_mostrarTablaLayout.setHorizontalGroup(
            dialog_mostrarTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialog_mostrarTablaLayout.createSequentialGroup()
                .addComponent(bg_tabla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        dialog_mostrarTablaLayout.setVerticalGroup(
            dialog_mostrarTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg_tabla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        dialog_simular.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        bg_simular.setBackground(new java.awt.Color(255, 255, 255));

        btn_registrar.setText("Registrar");
        btn_registrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_registrarMouseClicked(evt);
            }
        });

        txt_equipos.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        txt_equipos.setText("PARTIDO");

        txt_vs.setText("VS");

        javax.swing.GroupLayout bg_simularLayout = new javax.swing.GroupLayout(bg_simular);
        bg_simular.setLayout(bg_simularLayout);
        bg_simularLayout.setHorizontalGroup(
            bg_simularLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bg_simularLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(bg_simularLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spinner_local, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_equipoLocal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 124, Short.MAX_VALUE)
                .addGroup(bg_simularLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cb_equipoVisita, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinner_visita, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(72, 72, 72))
            .addGroup(bg_simularLayout.createSequentialGroup()
                .addGroup(bg_simularLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bg_simularLayout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(btn_registrar))
                    .addGroup(bg_simularLayout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addComponent(txt_equipos))
                    .addGroup(bg_simularLayout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addComponent(txt_vs)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        bg_simularLayout.setVerticalGroup(
            bg_simularLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bg_simularLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(txt_equipos)
                .addGap(12, 12, 12)
                .addGroup(bg_simularLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_equipoVisita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_equipoLocal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_vs)
                .addGap(28, 28, 28)
                .addGroup(bg_simularLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinner_local, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinner_visita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61)
                .addComponent(btn_registrar)
                .addContainerGap(167, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout dialog_simularLayout = new javax.swing.GroupLayout(dialog_simular.getContentPane());
        dialog_simular.getContentPane().setLayout(dialog_simularLayout);
        dialog_simularLayout.setHorizontalGroup(
            dialog_simularLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg_simular, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        dialog_simularLayout.setVerticalGroup(
            dialog_simularLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg_simular, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        dialog_lista.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        bg_lista.setBackground(new java.awt.Color(255, 255, 255));

        lista_equipos.setModel(new DefaultListModel());
        jScrollPane3.setViewportView(lista_equipos);

        txt_equipo.setText("EQUIPOS");

        btn_historial.setText("Historial");
        btn_historial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_historialMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout bg_listaLayout = new javax.swing.GroupLayout(bg_lista);
        bg_lista.setLayout(bg_listaLayout);
        bg_listaLayout.setHorizontalGroup(
            bg_listaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bg_listaLayout.createSequentialGroup()
                .addGroup(bg_listaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bg_listaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE))
                    .addGroup(bg_listaLayout.createSequentialGroup()
                        .addGap(168, 168, 168)
                        .addComponent(txt_equipo)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(bg_listaLayout.createSequentialGroup()
                .addGap(152, 152, 152)
                .addComponent(btn_historial)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        bg_listaLayout.setVerticalGroup(
            bg_listaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bg_listaLayout.createSequentialGroup()
                .addContainerGap(9, Short.MAX_VALUE)
                .addComponent(txt_equipo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_historial)
                .addGap(40, 40, 40))
        );

        javax.swing.GroupLayout dialog_listaLayout = new javax.swing.GroupLayout(dialog_lista.getContentPane());
        dialog_lista.getContentPane().setLayout(dialog_listaLayout);
        dialog_listaLayout.setHorizontalGroup(
            dialog_listaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg_lista, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        dialog_listaLayout.setVerticalGroup(
            dialog_listaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg_lista, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ExamenII");

        bg_examen.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Torneos");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Q1");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Q2");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Q4");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Q5");
        treeNode1.add(treeNode2);
        jTree_torneos.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jTree_torneos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTree_torneosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTree_torneos);

        txt_torneos.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        txt_torneos.setText("Torneos");

        btn_guardar.setText("Guardar");
        btn_guardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_guardarMouseClicked(evt);
            }
        });

        btn_cargar.setText("Cargar");

        javax.swing.GroupLayout bg_examenLayout = new javax.swing.GroupLayout(bg_examen);
        bg_examen.setLayout(bg_examenLayout);
        bg_examenLayout.setHorizontalGroup(
            bg_examenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bg_examenLayout.createSequentialGroup()
                .addContainerGap(94, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66))
            .addGroup(bg_examenLayout.createSequentialGroup()
                .addGroup(bg_examenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bg_examenLayout.createSequentialGroup()
                        .addGap(353, 353, 353)
                        .addComponent(txt_torneos))
                    .addGroup(bg_examenLayout.createSequentialGroup()
                        .addGap(254, 254, 254)
                        .addComponent(btn_guardar)
                        .addGap(160, 160, 160)
                        .addComponent(btn_cargar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        bg_examenLayout.setVerticalGroup(
            bg_examenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bg_examenLayout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addComponent(txt_torneos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(bg_examenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_guardar)
                    .addComponent(btn_cargar))
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg_examen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg_examen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void crear_deporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crear_deporteActionPerformed
        int decision;
        boolean found = false;
        do{
            String nombre = JOptionPane.showInputDialog(this,"Ingrese el nombre del deporte:");
            Deporte deporte = new Deporte(nombre);
            if(deportes.isEmpty()){
                deportes.add(deporte);
            }else{
                for (Deporte d : deportes) {
                    if( d.getNombre().equals(deporte.getNombre()) ){
                       found = true;
                       JOptionPane.showMessageDialog(this, "¡Ya existe ese deporte!");
                    }
                }
                
                if(!found){
                    deportes.add(deporte);
                }
            }
            
            decision = JOptionPane.showConfirmDialog(
                this, 
                "¿Desea agregar otro deporte?", 
                "Agregar deporte", 
                JOptionPane.YES_NO_OPTION, 
                JOptionPane.QUESTION_MESSAGE);
            
        }while(decision == JOptionPane.YES_OPTION);
        
        agregarDeporteTree();
    }//GEN-LAST:event_crear_deporteActionPerformed

    private void jTree_torneosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTree_torneosMouseClicked
        try{
            if(evt.isMetaDown()){
                Object v1
                        = jTree_torneos.getSelectionPath().
                                getLastPathComponent();
                nodo_seleccionado = (DefaultMutableTreeNode) v1;
            }
        }catch(Exception e){
        }
        
        if(nodo_seleccionado != null){
            if(evt.isMetaDown() && nodo_seleccionado.getUserObject().equals("Torneos")){
                pp_torneos.show(jTree_torneos, evt.getX(), evt.getY());
            }else if(evt.isMetaDown() && nodo_seleccionado.getUserObject() instanceof Deporte){
                pp_deporte.show(jTree_torneos, evt.getX(), evt.getY());
            }else if(evt.isMetaDown() && nodo_seleccionado.getUserObject() instanceof Torneo){
                pp_opcionesTorneo.show(jTree_torneos, evt.getX(), evt.getY());
            }
        }
    }//GEN-LAST:event_jTree_torneosMouseClicked

    private void crear_torneoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crear_torneoActionPerformed
        int decision;
        do{
            String nombre = JOptionPane.showInputDialog("Ingrese el nombre del torneo:");
            Torneo torneo = new Torneo(nombre);
            boolean found = false;

            Deporte deporte = (Deporte)nodo_seleccionado.getUserObject();
            
            if(deporte.getTorneos().isEmpty()){
                deporte.getTorneos().add(torneo);
                torneo.setPeriodo(nodo_seleccionado.getParent().toString());
            }else{
                for (Torneo t : deporte.getTorneos()) {
                    if(torneo.equals(t)){
                        found = true;
                        JOptionPane.showMessageDialog(this, "¡Ya existe ese deporte!");
                    }
                }

                if(!found){
                    deporte.getTorneos().add(torneo);
                    torneo.setPeriodo(nodo_seleccionado.getParent().toString());
                }
            }
            
            decision = JOptionPane.showConfirmDialog(
                this, 
                "¿Desea agregar otro torneo?", 
                "Agregar torneo", 
                JOptionPane.YES_NO_OPTION, 
                JOptionPane.QUESTION_MESSAGE);
            
        }while(decision == JOptionPane.YES_OPTION);
        
        agregarTorneoTree();
    }//GEN-LAST:event_crear_torneoActionPerformed

    private void crear_equipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crear_equipoActionPerformed
        int decision;
        boolean found = false;
        do{
            String nombre = JOptionPane.showInputDialog(this,"Ingrese el nombre del equipo:");
            Equipo equipo = new Equipo(nombre);
            Torneo torneo = (Torneo)nodo_seleccionado.getUserObject();
            if(torneo.getEquipos().isEmpty() ){
                torneo.getEquipos().add(equipo);
            }else{
                for (Equipo e : torneo.getEquipos()) {
                    if( e.getNombre().equals(equipo.getNombre()) ){
                       found = true;
                       JOptionPane.showMessageDialog(this, "¡Ya existe ese deporte!");
                    }
                }
                
                if(!found){
                    torneo.getEquipos().add(equipo);
                }
            }
            
            decision = JOptionPane.showConfirmDialog(
                this, 
                "¿Desea agregar otro equipo?", 
                "Agregar equipo", 
                JOptionPane.YES_NO_OPTION, 
                JOptionPane.QUESTION_MESSAGE);
            
        }while(decision == JOptionPane.YES_OPTION);
        agregarEquipoTree();
    }//GEN-LAST:event_crear_equipoActionPerformed

    private void mostrar_tablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrar_tablaActionPerformed
       DefaultTableModel modelo = (DefaultTableModel) tabla_deporte.getModel();
       modelo.setRowCount(0);
       
        Torneo torneo = (Torneo)nodo_seleccionado.getUserObject();
        ArrayList<Integer> puntos = new ArrayList<>();

        for (Equipo equipo : torneo.getEquipos()) {
            Object[] row = {equipo.getNombre(),equipo.getPuntos()};
            modelo.addRow(row);
        }
        Collections.sort(puntos);
        
        Comparator<Equipo> compareByPoints = Comparator.comparing(Equipo::getPuntos).reversed();
        Collections.sort(torneo.getEquipos(), compareByPoints);
        for (Equipo equipo : torneo.getEquipos()) {
            Object[] row = {equipo.getNombre(),equipo.getPuntos()};
            modelo.addRow(row);
        }
        
        dialog_mostrarTabla.setVisible(true);
        dialog_mostrarTabla.setBounds(300, 200, 400, 400);
    }//GEN-LAST:event_mostrar_tablaActionPerformed

    private void simular_partidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simular_partidoActionPerformed
        dialog_simular.setVisible(true);
        dialog_simular.setBounds(500, 200, 400, 400);
        
        DefaultComboBoxModel modeloLocal = (DefaultComboBoxModel) cb_equipoLocal.getModel();
        modeloLocal.removeAllElements();
        modeloLocal.addAll( ((Torneo)nodo_seleccionado.getUserObject()).getEquipos() );
        DefaultComboBoxModel modeloVisita = (DefaultComboBoxModel) cb_equipoVisita.getModel();
        modeloVisita.removeAllElements();
        modeloVisita.addAll( ((Torneo)nodo_seleccionado.getUserObject()).getEquipos() );
        
        cb_equipoLocal.setModel(modeloLocal);
        cb_equipoVisita.setModel(modeloVisita);
    }//GEN-LAST:event_simular_partidoActionPerformed

    private void btn_registrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_registrarMouseClicked
        Partido partido = new Partido(
                String.valueOf(cb_equipoLocal.getSelectedItem()),
                String.valueOf(cb_equipoVisita.getSelectedItem())
        );
        if((int)spinner_local.getValue() > (int)spinner_visita.getValue()){
            ((Equipo)cb_equipoLocal.getSelectedItem()).setPuntos( ((Equipo)cb_equipoLocal.getSelectedItem()).getPuntos() + 3);
        }else if((int)spinner_local.getValue() < (int)spinner_visita.getValue()){
            ((Equipo)cb_equipoVisita.getSelectedItem()).setPuntos( ((Equipo)cb_equipoVisita.getSelectedItem()).getPuntos() + 3);
        }else{
            ((Equipo)cb_equipoLocal.getSelectedItem()).setPuntos( ((Equipo)cb_equipoLocal.getSelectedItem()).getPuntos() + 1);
            ((Equipo)cb_equipoVisita.getSelectedItem()).setPuntos( ((Equipo)cb_equipoVisita.getSelectedItem()).getPuntos() + 1);
        }
        ((Torneo)nodo_seleccionado.getUserObject()).getPartidos().add(partido);
        JOptionPane.showMessageDialog(this, "Partido registrado");
        
        dialog_simular.setVisible(false);
    }//GEN-LAST:event_btn_registrarMouseClicked

    private void listar_equiposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listar_equiposActionPerformed
        dialog_lista.setVisible(true);
        dialog_lista.setBounds(300, 200, 400, 400);
        DefaultListModel modelo = (DefaultListModel) lista_equipos.getModel();
        modelo.removeAllElements();
        modelo.addAll( ((Torneo)nodo_seleccionado.getUserObject()).getEquipos() );
    }//GEN-LAST:event_listar_equiposActionPerformed

    private void btn_historialMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_historialMouseClicked
        ArrayList<Partido> partidos = ((Torneo)nodo_seleccionado.getUserObject()).getPartidos();
        JOptionPane.showMessageDialog(dialog_lista, partidos);
    }//GEN-LAST:event_btn_historialMouseClicked

    private void btn_guardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_guardarMouseClicked
       JFileChooser jfc = new JFileChooser("./");
        int seleccion = jfc.showSaveDialog(this);
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            try {
                File archivo = new File(jfc.getSelectedFile().getPath());
                ManejoBinarios binario = new ManejoBinarios(archivo, jTree_torneos);
                binario.escribirBinario(jTree_torneos);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btn_guardarMouseClicked

    private void agregarDeporteTree(){
        DefaultTreeModel modelo = (DefaultTreeModel) jTree_torneos.getModel();
        DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modelo.getRoot();
        
        for (int i = 0; i < raiz.getChildCount(); i++) {  
            DefaultMutableTreeNode periodo = (DefaultMutableTreeNode)raiz.getChildAt(i);
            periodo.removeAllChildren();
            for (Deporte deporte : deportes) {
                periodo.add(new DefaultMutableTreeNode(deporte));
            }
        }
        modelo.reload();
    }
    
    public void agregarTorneoTree(){
        DefaultTreeModel modelo = (DefaultTreeModel) jTree_torneos.getModel();
        DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modelo.getRoot();
        
        for (int i = 0; i < raiz.getChildCount(); i++) {
            DefaultMutableTreeNode periodo = (DefaultMutableTreeNode)raiz.getChildAt(i);
            if( periodo.equals((DefaultMutableTreeNode)nodo_seleccionado.getParent()) ){
                Deporte deporte = (Deporte)nodo_seleccionado.getUserObject();
                nodo_seleccionado.removeAllChildren();
                
                for (Torneo torneo : deporte.getTorneos()) {
                    if( torneo.getPeriodo().equals(periodo.toString()) ){
                        nodo_seleccionado.add(new DefaultMutableTreeNode(torneo));
                    }
                }
            }
        }
        modelo.reload();
    }
    
    public void agregarEquipoTree(){
        nodo_seleccionado.removeAllChildren();
        DefaultTreeModel modelo = (DefaultTreeModel) jTree_torneos.getModel();
        DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modelo.getRoot();
        
        for (int i = 0; i < raiz.getChildCount(); i++) {
            DefaultMutableTreeNode periodo = (DefaultMutableTreeNode)raiz.getChildAt(i);
            Torneo torneo = (Torneo)nodo_seleccionado.getUserObject();
            
            if( torneo.getPeriodo().equals(periodo.toString()) ){
                for (Equipo equipo : torneo.getEquipos()) {
                    nodo_seleccionado.add(new DefaultMutableTreeNode(equipo));
                }
            }
        }
        modelo.reload();
    }

    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(() -> {
            new ExamenII().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bg_examen;
    private javax.swing.JPanel bg_lista;
    private javax.swing.JPanel bg_simular;
    private javax.swing.JPanel bg_tabla;
    private javax.swing.JButton btn_cargar;
    private javax.swing.JButton btn_guardar;
    private javax.swing.JButton btn_historial;
    private javax.swing.JButton btn_registrar;
    private javax.swing.JComboBox<String> cb_equipoLocal;
    private javax.swing.JComboBox<String> cb_equipoVisita;
    private javax.swing.JMenuItem crear_deporte;
    private javax.swing.JMenuItem crear_equipo;
    private javax.swing.JMenuItem crear_torneo;
    private javax.swing.JDialog dialog_lista;
    private javax.swing.JDialog dialog_mostrarTabla;
    private javax.swing.JDialog dialog_simular;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTree jTree_torneos;
    private javax.swing.JList<String> lista_equipos;
    private javax.swing.JMenuItem listar_equipos;
    private javax.swing.JMenuItem mostrar_tabla;
    private javax.swing.JPopupMenu pp_deporte;
    private javax.swing.JPopupMenu pp_opcionesTorneo;
    private javax.swing.JPopupMenu pp_torneos;
    private javax.swing.JMenuItem simular_partido;
    private javax.swing.JSpinner spinner_local;
    private javax.swing.JSpinner spinner_visita;
    private javax.swing.JTable tabla_deporte;
    private javax.swing.JLabel txt_equipo;
    private javax.swing.JLabel txt_equipos;
    private javax.swing.JLabel txt_torneos;
    private javax.swing.JLabel txt_vs;
    // End of variables declaration//GEN-END:variables
    
    private DefaultMutableTreeNode nodo_seleccionado;
    private ArrayList<Deporte> deportes = new ArrayList<>();
}
